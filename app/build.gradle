/*
 *
 *  Copyright (C) 2017-2020 Pierre Thomain
 *
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 3
        versionName "1.2"
        vectorDrawables.useSupportLibrary = true

        aaptOptions {
            additionalParameters "--no-version-vectors"
        }
    }

    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            multiDexEnabled false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/app_release.kotlin_module'
        exclude 'META-INF/core_release.kotlin_module'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/eclipse.inf'
        exclude 'about_files/LICENSE-2.0.txt'
        exclude 'plugin.xml'
        exclude 'plugin.properties'
    }

}

dependencies {
    implementation project(':lib:core')
    implementation project(':lib:modules:http:retrofit')
    implementation project(':lib:modules:http:volley')
    implementation project(':lib:modules:persistence:file')
    implementation project(':lib:modules:persistence:memory')
    implementation project(':lib:modules:persistence:sqlite')
    implementation project(':lib:modules:serialisation:gson')
    implementation project(':lib:modules:serialisation:moshi')
    implementation project(':lib:modules:serialisation:decorators:compression')
    implementation project(':lib:modules:serialisation:decorators:encryption')

    implementation appDependencies.multiDex

    implementation appDependencies.koinCore
    implementation appDependencies.koinCoreExt

    implementation appDependencies.volley

    implementation appDependencies.boilerplate_ui
    implementation appDependencies.rxDogTag

    implementation appDependencies.okHttp
    implementation appDependencies.okHttpLogging

    implementation appDependencies.retrofitConverterGson
    implementation appDependencies.moshi
    implementation appDependencies.moshiKotlin

    implementation appDependencies.appCompat
    implementation appDependencies.browser
}
